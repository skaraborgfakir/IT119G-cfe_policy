# -*-cfengine-*-

bundle agent dhcp
{
  meta:
      "tags" slist => { "autorun" };

  vars:
    any::
      "template_data"
		 data => readjson("$(this.promise_dirname)/hosts.json");

  files:
    DHCP_server::
      #
      # spara undan dist-versionen av filerna
      #
      "/etc/default/isc-dhcp-server.saved_dist_version"
	       unless => fileexists("/etc/default/isc-dhcp-server.saved_dist_version"),
	    copy_from => local_dcp("/etc/default/isc-dhcp-server"),
	      comment => "save dist versionen";

      "/etc/dhcp/dhcpd.conf.saved_dist_version"
	       unless => fileexists("/etc/dhcp/dhcpd.conf.saved_dist_version"),
	    copy_from => local_dcp("/etc/dhcp/dhcpd.conf"),
	      comment => "save dist versionen";

      #
      # etc/default/isc-dhcp-server
      #
      "/etc/default/isc-dhcp-server.tmpl.mustache"
	       create => "true",
	edit_defaults => empty,
	    edit_line => default_isc_dhcp_server;

      "/etc/default/isc-dhcp-server"
	       create => "true",
	edit_defaults => empty,
      template_method => "mustache",
	edit_template => "/etc/default/isc-dhcp-server.tmpl.mustache";

      "/etc/default/isc-dhcp-server.tmpl.mustache" perms => m("444");
      "/etc/default/isc-dhcp-server"               perms => m("444");

      #
      # etcd/dhcp/dhcpd.conf
      #
      "$(template_data[dhcpd_conf_file]).tmpl.mustache"
	       create => "true",
	edit_defaults => empty,
	    edit_line => dhcpd_conf;

      "$(template_data[dhcpd_conf_file])"
	       create => "true",
	edit_defaults => empty,
      template_method => "mustache",
	edit_template => "$(template_data[dhcpd_conf_file]).tmpl.mustache",
	      classes => results("bundle", "dhcpd_conf_changed");

      "$(template_data[dhcpd_conf_file]).tmpl.mustache" perms => m("444");
      "$(template_data[dhcpd_conf_file])"               perms => m("444");

  packages:
    DHCP_server::
      "isc-dhcp-server"
	       policy => "present",
	      classes => results("namespace", "isc_dhcp_server_installed"),
       package_module => apt_get,
		 meta => { "dhcp" };

  services:
    DHCP_server::
      "isc-dhcp-server"
	   ifvarclass => "isc_dhcp_server_installed_repaired",
       service_policy => "enable";

      "isc-dhcp-server"
       service_policy => "restart",
	   ifvarclass => "dhcpd_conf_changed_repaired";

  reports:
    verbose_mode|DEBUG|DEBUG_b18steni::
      "$(this.bundle): Hello, this is an automatically loaded bundle";
      "$(this.bundle): isc-dhcpd:s configuration ändrades"
	   ifvarclass => "dhcpd_conf_changed_repaired";
}

bundle edit_line dhcpd_conf
{
  insert_lines:
      "#
# avsedd för {{vars.sys.fqhost}}
#
# cfe-regler från {{vars.sys.policy_hub}}
# senast uppdatering av policy: {{sys.last_policy_update}}
#
# def.json tidsstämpel: {{{vars.def.timestamp}}}
#

ddns-update-style none;

option domain-name \"{{vars.def.domain}}\";

default-lease-time 600;
max-lease-time 7200;

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility local7;

{{#vars.dhcp.template_data.dns_nameserver}}
option domain-name-servers {{.}};
{{/vars.dhcp.template_data.dns_nameserver}}

subnet 192.168.1.0 netmask 255.255.255.0 {
  range 192.168.1.65 192.168.1.126;
  option routers 192.168.1.1;
}

{{#vars.dhcp.template_data.mac_mappings}}
host {{name}} {
   hardware ethernet {{mac_addr}};
   fixed-address {{ip_addr}};
{{#vars.dhcp.template_data.dns_nameserver}}
   option domain-name-servers {{.}};
{{/vars.dhcp.template_data.dns_nameserver}}
}
{{/vars.dhcp.template_data.mac_mappings}}
";
}

bundle edit_line default_isc_dhcp_server
{
  insert_lines:
      "#
# avsedd för {{vars.sys.fqhost}}
#
# def.json tidsstämpel: {{{vars.def.timestamp}}}
#
# cfe-regler från {{vars.sys.policy_hub}}
#
# Defaults for isc-dhcp-server initscript
# sourced by /etc/init.d/isc-dhcp-server
# installed at /etc/default/isc-dhcp-server by the maintainer scripts

#
# This is a POSIX shell fragment
#

#DHCPD_CONF={{vars.dhcp.template_data.dhcpd_conf_file}}
#DHCPD_PID={{vars.dhcp.template_data.dhcpd_pid_file}}

# Path to dhcpd's config file (default: /etc/dhcp/dhcpd.conf).
#DHCPD_CONF=/etc/dhcp/dhcpd.conf

# Path to dhcpd's PID file (default: /var/run/dhcpd.pid).
#DHCPD_PID=/var/run/dhcpd.pid

# Additional options to start dhcpd with.
#	Don't use options -cf or -pf here; use DHCPD_CONF/ DHCPD_PID instead
#OPTIONS=\"\"
OPTIONS={{vars.dhcp.template_data.dhcp_options}}

# On what interfaces should the DHCP server (dhcpd) serve DHCP requests?
#	Separate multiple interfaces with spaces, e.g. \"eth0 eth1\".
INTERFACES={{vars.dhcp.template_data.dhcp_listen_iface}}
";
}
