# -*-cfengine-*-
#
# Time-stamp: <2019-01-31 17:22:26 nsa>
#

bundle agent open_vm_tools
{
  meta:
      "tags" slist => { "autorun" };

  vars:
    centos::
      "vmtoolsd_status"
	string => "vmtoolsd installed",
	ifvarclass => "vmtoolsd_daemon_installed",
	meta => { "inventory", "attribute_name=vmtoolsd status"};

      "vmtoolsd_status"
	string => "vmtoolsd_is_dead" ,
	ifvarclass => "vmtoolsd_is_dead" ,
	meta => { "inventory", "attribute_name=vmtoolsd status"};

  classes:
    centos::
      "vmtoolsd_service_enabled"
	scope => "namespace",
	expression => "any",
	meta => { "inventory", "attribute_name=vmtoolsd status"};

      "vmtoolsd_daemon_installed"
	scope => "namespace",
	expression => fileexists("/usr/bin/vmtoolsd"),
	meta => { "inventory", "attribute_name=vmtoolsd status"};

  processes:
      "vmtoolsd"
	process_select => vmtoolsd_selector,
	process_count => vmtoolsd_count;

  services:
    run_open_vm_tools.ubuntu::
      "open-vm-tools"
	service_policy => "start";

    run_open_vm_tools.centos::
      "vmtoolsd"
	service_policy => "enable";

  packages:
    run_open_vm_tools.ubuntu::
      "open-vm-tools"
	policy => "present",
	package_module => apt_get;

    run_open_vm_tools.centos::
      "open-vm-tools"
	policy => "present",
	package_module => yum;
}


body process_count vmtoolsd_count
{
	match_range => "1,1";
	in_range_define => { "vmtoolsd_is_ok"  };
	out_of_range_define => { "vmtoolsd_is_dead" };
}

body process_select vmtoolsd_selector
{
	command  => "vmtoolsd";
	process_result => "command";
}
